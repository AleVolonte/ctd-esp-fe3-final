{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Final Front End 2\\\\fe3-final\\\\src\\\\Routes\\\\Favs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Card from \"../Components/Card\";\nimport { ContextGlobal } from \"../Components/utils/global.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  _s();\n\n  const {\n    state: {\n      theme\n    }\n  } = useContext(ContextGlobal);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const fetchFavorites = () => {\n      const existingCards = localStorage.getItem(\"favCards\");\n      const parsedCards = existingCards ? JSON.parse(existingCards) : [];\n      setFavorites(parsedCards);\n    };\n\n    fetchFavorites();\n  }, []);\n\n  const removeFromFavorites = cardId => {\n    const updatedFavorites = favorites.filter(card => card.id !== cardId);\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favCards\", JSON.stringify(updatedFavorites));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: theme === \"dark\" ? \"dark\" : \"light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentistas Favoritos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: favorites.map(dentist => /*#__PURE__*/_jsxDEV(Card, {\n        name: dentist.name,\n        username: dentist.username,\n        id: dentist.id,\n        isFavorite: true,\n        onRemoveFromFavorites: removeFromFavorites\n      }, dentist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Favs, \"SxJEFrHLPaNG1R5EaDKEDxhDs8Y=\");\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Card","ContextGlobal","Favs","state","theme","favorites","setFavorites","fetchFavorites","existingCards","localStorage","getItem","parsedCards","JSON","parse","removeFromFavorites","cardId","updatedFavorites","filter","card","id","setItem","stringify","map","dentist","name","username"],"sources":["C:/Users/Usuario/Desktop/Final Front End 2/fe3-final/src/Routes/Favs.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport Card from \"../Components/Card\";\r\nimport { ContextGlobal } from \"../Components/utils/global.context\";\r\n\r\nconst Favs = () => {\r\n  const { state: { theme } } = useContext(ContextGlobal);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFavorites = () => {\r\n      const existingCards = localStorage.getItem(\"favCards\");\r\n      const parsedCards = existingCards ? JSON.parse(existingCards) : [];\r\n      setFavorites(parsedCards);\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, []);\r\n\r\n  const removeFromFavorites = (cardId) => {\r\n    const updatedFavorites = favorites.filter((card) => card.id !== cardId);\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem(\"favCards\", JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  return (\r\n    <main className={theme === \"dark\" ? \"dark\" : \"light\"}>\r\n      <h1>Dentistas Favoritos</h1>\r\n      <div className=\"card-grid\">\r\n        {favorites.map((dentist) => (\r\n          <Card\r\n            key={dentist.id}\r\n            name={dentist.name}\r\n            username={dentist.username}\r\n            id={dentist.id}\r\n            isFavorite={true}\r\n            onRemoveFromFavorites={removeFromFavorites}\r\n          />\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Favs;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAT,QAA8B,oCAA9B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEC,KAAK,EAAE;MAAEC;IAAF;EAAT,IAAuBP,UAAU,CAACI,aAAD,CAAvC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAG,MAAM;MAC3B,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtB;MACA,MAAMC,WAAW,GAAGH,aAAa,GAAGI,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAH,GAA+B,EAAhE;MACAF,YAAY,CAACK,WAAD,CAAZ;IACD,CAJD;;IAMAJ,cAAc;EACf,CARQ,EAQN,EARM,CAAT;;EAUA,MAAMO,mBAAmB,GAAIC,MAAD,IAAY;IACtC,MAAMC,gBAAgB,GAAGX,SAAS,CAACY,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,MAAvC,CAAzB;IACAT,YAAY,CAACU,gBAAD,CAAZ;IACAP,YAAY,CAACW,OAAb,CAAqB,UAArB,EAAiCR,IAAI,CAACS,SAAL,CAAeL,gBAAf,CAAjC;EACD,CAJD;;EAMA,oBACE;IAAM,SAAS,EAAEZ,KAAK,KAAK,MAAV,GAAmB,MAAnB,GAA4B,OAA7C;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGC,SAAS,CAACiB,GAAV,CAAeC,OAAD,iBACb,QAAC,IAAD;QAEE,IAAI,EAAEA,OAAO,CAACC,IAFhB;QAGE,QAAQ,EAAED,OAAO,CAACE,QAHpB;QAIE,EAAE,EAAEF,OAAO,CAACJ,EAJd;QAKE,UAAU,EAAE,IALd;QAME,qBAAqB,EAAEL;MANzB,GACOS,OAAO,CAACJ,EADf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CArCD;;GAAMjB,I;;KAAAA,I;AAuCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}