{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Final Front End 2\\\\fe3-final\\\\src\\\\Routes\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../Components/Card';\nimport { ContextGlobal } from '../Components/utils/global.context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        dentists: action.payload\n      };\n\n    case 'ADD_TO_FAVORITES':\n      return { ...state,\n        favorites: [...state.favorites, action.payload]\n      };\n\n    case 'REMOVE_FROM_FAVORITES':\n      return { ...state,\n        favorites: state.favorites.filter(card => card.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  dentists: [],\n  favorites: []\n};\n\nconst Home = () => {\n  _s();\n\n  const {\n    state: {\n      theme\n    }\n  } = useContext(ContextGlobal);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const fetchDentists = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const data = await response.json();\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (error) {\n        console.error('Error fetching dentists:', error);\n      }\n    };\n\n    fetchDentists();\n  }, []);\n  useEffect(() => {\n    const fetchFavorites = () => {\n      const existingCards = localStorage.getItem('favCards');\n      const parsedCards = existingCards ? JSON.parse(existingCards) : [];\n      setFavorites(parsedCards);\n    };\n\n    fetchFavorites();\n  }, []);\n\n  const handleAddToFavorites = cardData => {\n    const isCardAlreadyAdded = favorites.some(card => card.id === cardData.id);\n\n    if (isCardAlreadyAdded) {\n      alert('This card is already added to favorites.');\n    } else {\n      dispatch({\n        type: 'ADD_TO_FAVORITES',\n        payload: cardData\n      });\n      setFavorites(prevFavorites => [...prevFavorites, cardData]);\n      localStorage.setItem('favCards', JSON.stringify([...favorites, cardData]));\n      alert('Card added to favorites!');\n    }\n  };\n\n  const handleRemoveFromFavorites = cardId => {\n    dispatch({\n      type: 'REMOVE_FROM_FAVORITES',\n      payload: cardId\n    });\n    setFavorites(prevFavorites => prevFavorites.filter(card => card.id !== cardId));\n    localStorage.setItem('favCards', JSON.stringify(favorites.filter(card => card.id !== cardId)));\n    alert('Card removed from favorites!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: theme === 'dark' ? 'dark' : 'light',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: state.dentists.map(dentist => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/detail/${dentist.id}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          name: dentist.name,\n          username: dentist.username,\n          id: dentist.id,\n          onAddToFavorites: handleAddToFavorites,\n          onRemoveFromFavorites: handleRemoveFromFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, dentist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"YUqbJsBakPBAVXZF81CWSK5Kv+4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","useState","Link","Card","ContextGlobal","reducer","state","action","type","dentists","payload","favorites","filter","card","id","initialState","Home","theme","dispatch","setFavorites","fetchDentists","response","fetch","data","json","error","console","fetchFavorites","existingCards","localStorage","getItem","parsedCards","JSON","parse","handleAddToFavorites","cardData","isCardAlreadyAdded","some","alert","prevFavorites","setItem","stringify","handleRemoveFromFavorites","cardId","map","dentist","name","username"],"sources":["C:/Users/Usuario/Desktop/Final Front End 2/fe3-final/src/Routes/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../Components/Card';\r\nimport { ContextGlobal } from '../Components/utils/global.context';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, dentists: action.payload };\r\n    case 'ADD_TO_FAVORITES':\r\n      return { ...state, favorites: [...state.favorites, action.payload] };\r\n    case 'REMOVE_FROM_FAVORITES':\r\n      return { ...state, favorites: state.favorites.filter((card) => card.id !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  dentists: [],\r\n  favorites: [],\r\n};\r\n\r\nconst Home = () => {\r\n  const { state: { theme } } = useContext(ContextGlobal);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDentists = async () => {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const data = await response.json();\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (error) {\r\n        console.error('Error fetching dentists:', error);\r\n      }\r\n    };\r\n\r\n    fetchDentists();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchFavorites = () => {\r\n      const existingCards = localStorage.getItem('favCards');\r\n      const parsedCards = existingCards ? JSON.parse(existingCards) : [];\r\n      setFavorites(parsedCards);\r\n    };\r\n\r\n    fetchFavorites();\r\n  }, []);\r\n\r\n  const handleAddToFavorites = (cardData) => {\r\n    const isCardAlreadyAdded = favorites.some((card) => card.id === cardData.id);\r\n  \r\n    if (isCardAlreadyAdded) {\r\n      alert('This card is already added to favorites.');\r\n    } else {\r\n      dispatch({ type: 'ADD_TO_FAVORITES', payload: cardData });\r\n      setFavorites((prevFavorites) => [...prevFavorites, cardData]);\r\n      localStorage.setItem('favCards', JSON.stringify([...favorites, cardData]));\r\n      alert('Card added to favorites!');\r\n    }\r\n  };\r\n  const handleRemoveFromFavorites = (cardId) => {\r\n    dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: cardId });\r\n    setFavorites((prevFavorites) => prevFavorites.filter((card) => card.id !== cardId));\r\n    localStorage.setItem('favCards', JSON.stringify(favorites.filter((card) => card.id !== cardId)));\r\n    alert('Card removed from favorites!');\r\n  };\r\n\r\n  return (\r\n    <main className={theme === 'dark' ? 'dark' : 'light'}>\r\n      <h1>Home</h1>\r\n      <div className=\"card-grid\">\r\n        {state.dentists.map((dentist) => (\r\n          <Link key={dentist.id} to={`/detail/${dentist.id}`}>\r\n            <Card\r\n              name={dentist.name}\r\n              username={dentist.username}\r\n              id={dentist.id}\r\n              onAddToFavorites={handleAddToFavorites}\r\n              onRemoveFromFavorites={handleRemoveFromFavorites}\r\n            />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}