{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Final Front End 2\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState(initialState);\n\n  const toggleTheme = () => {\n    setState(prevState => ({ ...prevState,\n      theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n    }));\n  };\n\n  const contextValue = useMemo(() => ({\n    state,\n    toggleTheme\n  }), [state]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"E2LEY00v0hgn1q2HHvTgIo3ABVI=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useMemo","useState","initialState","theme","data","ContextGlobal","ContextProvider","children","state","setState","toggleTheme","prevState","contextValue"],"sources":["C:/Users/Usuario/Desktop/Final Front End 2/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useMemo, useState } from \"react\";\r\n\r\nexport const initialState = { theme: \"light\", data: [] };\r\n\r\n\r\nexport const ContextGlobal = createContext(initialState);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const toggleTheme = () => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\r\n    }));\r\n  };\r\n\r\n  const contextValue = useMemo(() => ({\r\n    state,\r\n    toggleTheme\r\n  }), [state]);\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={contextValue}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,OAA/B,EAAwCC,QAAxC,QAAwD,OAAxD;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,IAAI,EAAE;AAAxB,CAArB;AAGP,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAACG,YAAD,CAAnC;AAEP,OAAO,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACC,YAAD,CAAlC;;EAEA,MAAMQ,WAAW,GAAG,MAAM;IACxBD,QAAQ,CAACE,SAAS,KAAK,EACrB,GAAGA,SADkB;MAErBR,KAAK,EAAEQ,SAAS,CAACR,KAAV,KAAoB,OAApB,GAA8B,MAA9B,GAAuC;IAFzB,CAAL,CAAV,CAAR;EAID,CALD;;EAOA,MAAMS,YAAY,GAAGZ,OAAO,CAAC,OAAO;IAClCQ,KADkC;IAElCE;EAFkC,CAAP,CAAD,EAGxB,CAACF,KAAD,CAHwB,CAA5B;EAKA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEI,YAA/B;IAAA,UACGL;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CApBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}