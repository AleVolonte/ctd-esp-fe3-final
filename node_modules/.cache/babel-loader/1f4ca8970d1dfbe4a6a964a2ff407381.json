{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Final Front End 2\\\\fe3-final\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [nombre, setNombre] = useState('');\n  const [email, setEmail] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validationErrors = {};\n\n    if (nombre.trim() === '') {\n      validationErrors.nombre = 'Ingresa tu nombre';\n    } else if (nombre.trim().length < 5) {\n      validationErrors.nombre = 'Por favor, ingresa al menos 5 caracteres';\n    }\n\n    if (email.trim() === '') {\n      validationErrors.email = 'Ingresa tu email';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      validationErrors.email = 'Formato de email inválido';\n    }\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    setNombre('');\n    setEmail('');\n    setErrors({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true,\n          placeholder: \"Nombre\",\n          className: errors.nombre ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          placeholder: \"Email\",\n          className: errors.email ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"kd32A5kF5TTGTftR0lnch81WE6M=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Form","nombre","setNombre","email","setEmail","errors","setErrors","handleSubmit","e","preventDefault","validationErrors","trim","length","test","Object","keys","target","value"],"sources":["C:/Users/Usuario/Desktop/Final Front End 2/fe3-final/src/Components/Form.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Form = () => {\r\n  const [nombre, setNombre] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const validationErrors = {};\r\n\r\n    if (nombre.trim() === '') {\r\n      validationErrors.nombre = 'Ingresa tu nombre';\r\n    } else if (nombre.trim().length < 5) {\r\n      validationErrors.nombre = 'Por favor, ingresa al menos 5 caracteres';\r\n    }\r\n\r\n    if (email.trim() === '') {\r\n      validationErrors.email = 'Ingresa tu email';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      validationErrors.email = 'Formato de email inválido';\r\n    }\r\n\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    setNombre('');\r\n    setEmail('');\r\n    setErrors({});\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nombre\"\r\n            value={nombre}\r\n            onChange={(e) => setNombre(e.target.value)}\r\n            required\r\n            placeholder=\"Nombre\"\r\n            className={errors.nombre ? 'error' : ''}\r\n          />\r\n          {errors.nombre && <p className=\"error-message\">{errors.nombre}</p>}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n            placeholder=\"Email\"\r\n            className={errors.email ? 'error' : ''}\r\n          />\r\n          {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n        </div>\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMQ,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IAEA,MAAMC,gBAAgB,GAAG,EAAzB;;IAEA,IAAIT,MAAM,CAACU,IAAP,OAAkB,EAAtB,EAA0B;MACxBD,gBAAgB,CAACT,MAAjB,GAA0B,mBAA1B;IACD,CAFD,MAEO,IAAIA,MAAM,CAACU,IAAP,GAAcC,MAAd,GAAuB,CAA3B,EAA8B;MACnCF,gBAAgB,CAACT,MAAjB,GAA0B,0CAA1B;IACD;;IAED,IAAIE,KAAK,CAACQ,IAAN,OAAiB,EAArB,EAAyB;MACvBD,gBAAgB,CAACP,KAAjB,GAAyB,kBAAzB;IACD,CAFD,MAEO,IAAI,CAAC,eAAeU,IAAf,CAAoBV,KAApB,CAAL,EAAiC;MACtCO,gBAAgB,CAACP,KAAjB,GAAyB,2BAAzB;IACD;;IAED,IAAIW,MAAM,CAACC,IAAP,CAAYL,gBAAZ,EAA8BE,MAA9B,GAAuC,CAA3C,EAA8C;MAC5CN,SAAS,CAACI,gBAAD,CAAT;MACA;IACD;;IAEDR,SAAS,CAAC,EAAD,CAAT;IACAE,QAAQ,CAAC,EAAD,CAAR;IACAE,SAAS,CAAC,EAAD,CAAT;EACD,CAzBD;;EA2BA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACE;MAAM,QAAQ,EAAEC,YAAhB;MAAA,wBACE;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,EAAE,EAAC,QAFL;UAGE,KAAK,EAAEN,MAHT;UAIE,QAAQ,EAAGO,CAAD,IAAON,SAAS,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV,CAJ5B;UAKE,QAAQ,MALV;UAME,WAAW,EAAC,QANd;UAOE,SAAS,EAAEZ,MAAM,CAACJ,MAAP,GAAgB,OAAhB,GAA0B;QAPvC;UAAA;UAAA;UAAA;QAAA,QADF,EAUGI,MAAM,CAACJ,MAAP,iBAAiB;UAAG,SAAS,EAAC,eAAb;UAAA,UAA8BI,MAAM,CAACJ;QAArC;UAAA;UAAA;UAAA;QAAA,QAVpB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAaE;QAAA,wBACE;UACE,IAAI,EAAC,OADP;UAEE,EAAE,EAAC,OAFL;UAGE,KAAK,EAAEE,KAHT;UAIE,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAJ3B;UAKE,QAAQ,MALV;UAME,WAAW,EAAC,OANd;UAOE,SAAS,EAAEZ,MAAM,CAACF,KAAP,GAAe,OAAf,GAAyB;QAPtC;UAAA;UAAA;UAAA;QAAA,QADF,EAUGE,MAAM,CAACF,KAAP,iBAAgB;UAAG,SAAS,EAAC,eAAb;UAAA,UAA8BE,MAAM,CAACF;QAArC;UAAA;UAAA;UAAA;QAAA,QAVnB;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF,eAyBE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CA/DD;;GAAMH,I;;KAAAA,I;AAiEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}