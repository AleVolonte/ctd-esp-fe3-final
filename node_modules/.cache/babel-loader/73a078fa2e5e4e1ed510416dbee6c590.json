{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Final Front End 2\\\\fe3-final\\\\src\\\\Routes\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport Card from '../Components/Card';\nimport { ContextGlobal } from '../Components/utils/global.context';\nimport Detail from './Detail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        dentists: action.payload\n      };\n\n    case 'ADD_TO_FAVORITES':\n      return { ...state,\n        favorites: [...state.favorites, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  dentists: [],\n  favorites: []\n};\n\nconst Home = () => {\n  _s();\n\n  const {\n    state: {\n      theme\n    }\n  } = useContext(ContextGlobal);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const fetchDentists = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        const data = await response.json();\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: data\n        });\n      } catch (error) {\n        console.error('Error fetching dentists:', error);\n      }\n    };\n\n    fetchDentists();\n  }, []);\n\n  const handleAddToFavorites = cardData => {\n    // Check if the card is already in favorites\n    const isCardAlreadyAdded = state.favorites.some(card => card.id === cardData.id);\n\n    if (isCardAlreadyAdded) {\n      alert('This card is already added to favorites.');\n    } else {\n      dispatch({\n        type: 'ADD_TO_FAVORITES',\n        payload: cardData\n      });\n      alert('Card added to favorites!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: theme === 'dark' ? 'dark' : 'light',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: state.dentists.map(dentist => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          name: dentist.name,\n          username: dentist.username,\n          id: dentist.id,\n          onAddToFavorites: handleAddToFavorites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, dentist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"r05qBn1iEoJXG7fsuzgAPji5uvg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","Card","ContextGlobal","Detail","reducer","state","action","type","dentists","payload","favorites","initialState","Home","theme","dispatch","fetchDentists","response","fetch","data","json","error","console","handleAddToFavorites","cardData","isCardAlreadyAdded","some","card","id","alert","map","dentist","name","username"],"sources":["C:/Users/Usuario/Desktop/Final Front End 2/fe3-final/src/Routes/Home.jsx"],"sourcesContent":["import React, { useContext, useEffect, useReducer } from 'react';\r\nimport Card from '../Components/Card';\r\nimport { ContextGlobal } from '../Components/utils/global.context';\r\nimport Detail from './Detail';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, dentists: action.payload };\r\n    case 'ADD_TO_FAVORITES':\r\n      return { ...state, favorites: [...state.favorites, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  dentists: [],\r\n  favorites: [],\r\n};\r\n\r\nconst Home = () => {\r\n  const { state: { theme } } = useContext(ContextGlobal);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const fetchDentists = async () => {\r\n      try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const data = await response.json();\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (error) {\r\n        console.error('Error fetching dentists:', error);\r\n      }\r\n    };\r\n\r\n    fetchDentists();\r\n  }, []);\r\n\r\n  const handleAddToFavorites = (cardData) => {\r\n    // Check if the card is already in favorites\r\n    const isCardAlreadyAdded = state.favorites.some((card) => card.id === cardData.id);\r\n\r\n    if (isCardAlreadyAdded) {\r\n      alert('This card is already added to favorites.');\r\n    } else {\r\n      dispatch({ type: 'ADD_TO_FAVORITES', payload: cardData });\r\n      alert('Card added to favorites!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className={theme === 'dark' ? 'dark' : 'light'}>\r\n      <h1>Home</h1>\r\n      <div className='card-grid'>\r\n        {state.dentists.map((dentist) => (\r\n          <div key={dentist.id}>\r\n            <Card\r\n              name={dentist.name}\r\n              username={dentist.username}\r\n              id={dentist.id}\r\n              onAddToFavorites={handleAddToFavorites}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <Detail />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,eAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYG,QAAQ,EAAEF,MAAM,CAACG;MAA7B,CAAP;;IACF,KAAK,kBAAL;MACE,OAAO,EAAE,GAAGJ,KAAL;QAAYK,SAAS,EAAE,CAAC,GAAGL,KAAK,CAACK,SAAV,EAAqBJ,MAAM,CAACG,OAA5B;MAAvB,CAAP;;IACF;MACE,OAAOJ,KAAP;EANJ;AAQD,CATD;;AAWA,MAAMM,YAAY,GAAG;EACnBH,QAAQ,EAAE,EADS;EAEnBE,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAME,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM;IAAEP,KAAK,EAAE;MAAEQ;IAAF;EAAT,IAAuBf,UAAU,CAACI,aAAD,CAAvC;EACA,MAAM,CAACG,KAAD,EAAQS,QAAR,IAAoBd,UAAU,CAACI,OAAD,EAAUO,YAAV,CAApC;EAEAZ,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;QACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAL,QAAQ,CAAC;UAAEP,IAAI,EAAE,eAAR;UAAyBE,OAAO,EAAES;QAAlC,CAAD,CAAR;MACD,CAJD,CAIE,OAAOE,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;MACD;IACF,CARD;;IAUAL,aAAa;EACd,CAZQ,EAYN,EAZM,CAAT;;EAcA,MAAMO,oBAAoB,GAAIC,QAAD,IAAc;IACzC;IACA,MAAMC,kBAAkB,GAAGnB,KAAK,CAACK,SAAN,CAAgBe,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,QAAQ,CAACI,EAApD,CAA3B;;IAEA,IAAIH,kBAAJ,EAAwB;MACtBI,KAAK,CAAC,0CAAD,CAAL;IACD,CAFD,MAEO;MACLd,QAAQ,CAAC;QAAEP,IAAI,EAAE,kBAAR;QAA4BE,OAAO,EAAEc;MAArC,CAAD,CAAR;MACAK,KAAK,CAAC,0BAAD,CAAL;IACD;EACF,CAVD;;EAYA,oBACE;IAAM,SAAS,EAAEf,KAAK,KAAK,MAAV,GAAmB,MAAnB,GAA4B,OAA7C;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UACGR,KAAK,CAACG,QAAN,CAAeqB,GAAf,CAAoBC,OAAD,iBAClB;QAAA,uBACE,QAAC,IAAD;UACE,IAAI,EAAEA,OAAO,CAACC,IADhB;UAEE,QAAQ,EAAED,OAAO,CAACE,QAFpB;UAGE,EAAE,EAAEF,OAAO,CAACH,EAHd;UAIE,gBAAgB,EAAEL;QAJpB;UAAA;UAAA;UAAA;QAAA;MADF,GAAUQ,OAAO,CAACH,EAAlB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAeE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAjDD;;GAAMf,I;;KAAAA,I;AAmDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}